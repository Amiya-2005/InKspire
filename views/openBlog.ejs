<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("./partials/head") %>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= specificBlog.title %> | InKspire</title>
    <link rel="stylesheet" href="/css/openBlog.css" />
    <link rel="stylesheet" href="/css/footer.css" />
  </head>
  <body>
    <%- include("./partials/loader") %> <%- include("./partials/nav") %> <%
    const blog = specificBlog %> <% const author = specificBlog.createdBy %>

    <div class="container">
      <!-- Blog Card -->
      <div class="card blog-card">
        <!-- Cover Image - Moved to the top -->
        <div class="image-container" id="sourceImageContainer">
          <img
            style="aspect-ratio: '16/9';height: 350px;"
            src="<%= blog.coverImageUrl %>"
            class="cover-image"
            alt="<%= blog.title %> Cover Image"
            id="sourceImage"
          />
        </div>

        <div class="row g-0">
          <!-- Blog Content -->
          <div class="col-12">
            <div class="card-body">
              <h2 class="card-title"><%= blog.title %></h2>
              <div class="blog-meta mb-3">
                <span class="date">
                  <i class="bi bi-calendar3 me-2"></i><%= new
                  Date(blog.createdAt).toLocaleDateString('en-US', { year:
                  'numeric', month: 'long', day: 'numeric' }) %>
                </span>
              </div>
              <!-- Blog content rendered as static HTML -->
              <div class="blog-content"><%- blog.body %></div>
            </div>

            <!-- Author and Action Buttons -->
            <div
              class="d-flex flex-row justify-content-between align-items-center px-4 pb-3"
            >
              <div class="author-info">
                <a href="/user/profile/<%= author._id %>" class="author-link">
                  <img
                    src="<%= author.profilePic %>"
                    alt="<%= author.fullName %>'s profile picture"
                  />
                  <span><%= author.fullName %></span>
                </a>
              </div>

              <% if (locals.user && user._id == author._id) { %>
              <div class="action-buttons">
                <a
                  href="/blog/editBlog/<%= blog._id %>"
                  class="btn btn-primary"
                >
                  <i class="bi bi-pencil-square me-1"></i> Edit
                </a>

                <button
                  class="btn btn-danger"
                  data-bs-toggle="modal"
                  data-bs-target="#deleteModal"
                >
                  <i class="bi bi-trash me-1"></i> Delete
                </button>
              </div>

              <!-- Delete Confirmation Modal -->
              <div class="modal fade" id="deleteModal" tabindex="-1">
                <div class="modal-dialog modal-dialog-centered">
                  <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                      <h5 class="modal-title">
                        <i
                          class="bi bi-exclamation-triangle-fill text-danger"
                        ></i>
                        Confirm Delete
                      </h5>
                      <button
                        type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                      ></button>
                    </div>

                    <!-- Modal Body -->
                    <div class="modal-body text-center">
                      <p class="modal-text">
                        Are you sure you want to delete this blog? <br />
                        <strong>This action cannot be undone.</strong>
                      </p>
                    </div>

                    <!-- Modal Footer -->
                    <div class="modal-footer justify-content-center">
                      <form
                        action="/blog/deleteBlog/<%= blog._id %>"
                        method="post"
                      >
                        <button type="submit" class="btn btn-danger px-4">
                          Yes, Delete
                        </button>
                      </form>
                      <button
                        type="button"
                        class="btn btn-secondary px-4"
                        data-bs-dismiss="modal"
                      >
                        Cancel
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>

      <!-- Comments Section -->
      <div class="card comments-card">
        <h4>
          <i class="bi bi-chat-left-text me-2"></i>Comments (<%=
          blog.comments.length %>)
        </h4>

        <% if (blog.comments.length === 0) { %>
        <div class="empty-comments text-center py-4">
          <i class="bi bi-chat-square-text text-muted display-4"></i>
          <p class="mt-3">
            No comments yet. Be the first to share your thoughts!
          </p>
        </div>
        <% } else { %>
        <div class="comments-list">
          <% blog.comments.forEach((comment, index) => { %>
          <div
            class="comment-item <%= index < blog.comments.length - 1 ? 'mb-4 pb-4 border-bottom' : '' %>"
          >
            <div
              class="comment-header d-flex align-items-center justify-content-between mb-3"
            >
              <div class="author-info comment-author">
                <a href="/user/profile/<%= comment.person._id %>">
                  <% if (comment.person.profilePic) { %>
                  <img
                    src="<%= comment.person.profilePic %>"
                    alt="<%= comment.person.fullName || 'User' %>"
                  />
                  <% } else { %>
                  <div class="avatar-placeholder">
                    <%= (comment.person.fullName || 'U').charAt(0).toUpperCase()
                    %>
                  </div>
                  <% } %>
                </a>
                <div class="comment-meta"">
                  <a
                    href="/user/profile/<%= comment.person._id %>"
                    class="author-name"
                  >
                    <%= comment.person.fullName || 'Anonymous User' %>
                  </a>
                  <small class="comment-date">
                    <%= new Date(comment.createdAt).toLocaleDateString('en-US',
                    { year: 'numeric', month: 'short', day: 'numeric' }) %>
                  </small>
                </div>
              </div>


            <% if (locals.user && user._id == comment.person._id) { %>
              <form
                action="/blog/deleteComment/<%= comment._id %>"
                method="post"
              >
                <button type="submit" style="margin-right: 1.5rem; font-size: 1.3rem;color: red; border:none; border-radius:10%">
                  <i id="delete-comment-trash" class="bi bi-trash"></i>
                </button>
              </form>

            <% } %>

            </div>
            <div class="comment-content">
              <p><%= comment.content %></p>
            </div>
          </div>
          <% }); %>
        </div>
        <% } %> <% if (locals.user) { %>
        <div class="add-comment mt-4">
          <h5 class="mb-3">Add a comment</h5>
          <form
            class="comment-form"
            action="/blog/postComment/<%= locals.specificBlog._id %>"
            method="post"
          >
            <div class="form-floating mb-3">
              <textarea
                class="form-control"
                placeholder="Leave a comment here"
                id="commentText"
                name="comment"
                style="height: 100px"
              ></textarea>
              <label for="commentText">Your thoughts</label>
            </div>
            <button type="submit" class="btn btn-primary">
              <i class="bi bi-send me-1"></i> Post Comment
            </button>
          </form>
        </div>
        <% } else { %>
        <div class="login-to-comment text-center py-3 mt-3">
          <p>
            <a href="/user/login" class="btn btn-outline-primary"
              >Login to comment</a
            >
          </p>
        </div>
        <% } %>
      </div>
    </div>

    <!-- Lightbox for the cover image -->
    <div id="imageLightbox" class="lightbox">
      <div class="lightbox-content" id="lightboxContent">
        <img id="lightboxImage" src="" alt="Lightbox Image" />
      </div>
    </div>

    <%- include("./partials/script") %>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        document
          .querySelectorAll(".ql-tooltip")
          .forEach((element) => element.remove());
      });
      document.addEventListener("DOMContentLoaded", function () {
        // Example: Smooth scrolling for comment section
        const commentLinks = document.querySelectorAll(".comment-link");
        commentLinks.forEach((link) => {
          link.addEventListener("click", function (e) {
            e.preventDefault();
            document.querySelector(".comments-card").scrollIntoView({
              behavior: "smooth",
            });
          });
        });

        // Enhanced Lightbox functionality with position-based animation
        const sourceImage = document.getElementById("sourceImage");
        const sourceContainer = document.getElementById("sourceImageContainer");
        const lightbox = document.getElementById("imageLightbox");
        const lightboxContent = document.getElementById("lightboxContent");
        const lightboxImage = document.getElementById("lightboxImage");

        // Add click event to the cover image
        if (sourceImage) {
          sourceImage.addEventListener("click", function () {
            // Set the lightbox image source to match the clicked image
            lightboxImage.src = this.src;
            lightboxImage.alt = this.alt;

            // Get the position and dimensions of the source image
            const rect = sourceImage.getBoundingClientRect();

            // Set initial position and size of lightbox content to match source image
            lightboxContent.style.top = rect.top + "px";
            lightboxContent.style.left = rect.left + "px";
            lightboxContent.style.width = rect.width + "px";
            lightboxContent.style.height = rect.height + "px";

            // Display the lightbox
            lightbox.style.display = "block";

            // Force reflow
            void lightbox.offsetWidth;

            // Add active class to show background
            lightbox.classList.add("active");

            // Animate to center and full size
            setTimeout(() => {
              const windowWidth = window.innerWidth;
              const windowHeight = window.innerHeight;

              // Calculate center position
              const centerTop =
                (windowHeight -
                  Math.min(windowHeight * 0.9, lightboxImage.naturalHeight)) /
                2;
              const centerLeft =
                (windowWidth -
                  Math.min(windowWidth * 0.9, lightboxImage.naturalWidth)) /
                2;

              // Apply centered position and expanded size
              lightboxContent.style.top = centerTop + "px";
              lightboxContent.style.left = centerLeft + "px";
              lightboxContent.style.width = "auto";
              lightboxContent.style.height = "auto";
              lightboxContent.style.maxWidth = "90vw";
              lightboxContent.style.maxHeight = "90vh";

              // Prevent scrolling of the body when lightbox is open
              document.body.style.overflow = "hidden";
            }, 10);
          });
        }

        // Close lightbox when clicking on the background
        lightbox.addEventListener("click", function (e) {
          if (e.target === lightbox) {
            // Get the position and dimensions of the source image for return animation
            const rect = sourceImage.getBoundingClientRect();

            // Animate back to original position and size
            lightboxContent.style.top = rect.top + "px";
            lightboxContent.style.left = rect.left + "px";
            lightboxContent.style.width = rect.width + "px";
            lightboxContent.style.height = rect.height + "px";
            lightboxContent.style.maxWidth = "none";
            lightboxContent.style.maxHeight = "none";

            // Remove active class with transition
            lightbox.classList.remove("active");

            // Enable scrolling again
            document.body.style.overflow = "";

            // Hide the lightbox after animation completes
            setTimeout(() => {
              if (!lightbox.classList.contains("active")) {
                lightbox.style.display = "none";
                lightboxImage.src = "";
              }
            }, 600); // Match the transition duration
          }
        });

        // Close on escape key press
        document.addEventListener("keydown", function (e) {
          if (e.key === "Escape" && lightbox.classList.contains("active")) {
            // Get the position and dimensions of the source image for return animation
            const rect = sourceImage.getBoundingClientRect();

            // Animate back to original position and size
            lightboxContent.style.top = rect.top + "px";
            lightboxContent.style.left = rect.left + "px";
            lightboxContent.style.width = rect.width + "px";
            lightboxContent.style.height = rect.height + "px";
            lightboxContent.style.maxWidth = "none";
            lightboxContent.style.maxHeight = "none";

            lightbox.classList.remove("active");
            document.body.style.overflow = "";

            setTimeout(() => {
              if (!lightbox.classList.contains("active")) {
                lightbox.style.display = "none";
                lightboxImage.src = "";
              }
            }, 600);
          }
        });

        // Handle window resize to keep lightbox centered when open
        window.addEventListener("resize", function () {
          if (lightbox.classList.contains("active")) {
            const windowWidth = window.innerWidth;
            const windowHeight = window.innerHeight;

            // Calculate center position
            const centerTop =
              (windowHeight -
                Math.min(windowHeight * 0.9, lightboxImage.naturalHeight)) /
              2;
            const centerLeft =
              (windowWidth -
                Math.min(windowWidth * 0.9, lightboxImage.naturalWidth)) /
              2;

            // Apply centered position only if the lightbox is fully expanded
            if (
              lightboxContent.style.width === "auto" ||
              lightboxContent.style.maxWidth === "90vw"
            ) {
              lightboxContent.style.top = centerTop + "px";
              lightboxContent.style.left = centerLeft + "px";
            }
          }
        });
      });
    </script>
    <%- include("./partials/footer") %>
  </body>
</html>
